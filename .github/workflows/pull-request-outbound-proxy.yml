name: Pull Request CI - Outbound Proxy Infra
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch.
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
    paths:
      - 'infra-l2-outbound-proxy/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Required for sam-validate step
permissions:
  id-token: write
  contents: read

env: # Only adding the variables in that are required for
  AWS_REGION: eu-west-2

jobs:
  run-code-check:
    name: Code Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: infra-l2-outbound-proxy
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Checks if committing secrets to repo
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: "detect-secrets --all-files"

      - name: Setup nodeJS v20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set offline mirror path
        id: offline-mirror-path
        run: echo "mirror-dir=${GITHUB_WORKSPACE}/npm-packages-offline-cache" >> $GITHUB_OUTPUT

      - name: Cache npm offline-mirror
        uses: actions/cache@v4
        with:
          path: ${{ steps.offline-mirror-path.outputs.mirror-dir }}
          key: offline-mirror-oauth

      - name: Install dependencies
        run: npm install

      - name: Run Infra checks
        run: npm run test:infra

  sam-validate:
    name: SAM Validate
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: infra-l2-outbound-proxy
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Assume temporary AWS role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GH_F2F_PROXY_VALIDATE_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Cache SAM builds
        uses: actions/cache@v4
        with:
          path: |
            ./di-ipv-cri-cic-api/.aws-sam/cache
            ./di-ipv-cri-cic-api/.aws-sam/deps
            ./di-ipv-cri-cic-api/.aws-sam/build.toml
          key: sam-oauth

      - name: SAM Validate
        run: sam validate --region ${{ env.AWS_REGION }} -t template.yaml

      - name: SAM Build
        run: sam build -t template.yaml
