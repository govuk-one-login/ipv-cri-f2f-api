name: Deploy Test Container to ECR

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'infra-l2-dynamo/**'
      - 'infra-l2-kms/**'
      - 'f2f-ipv-stub/**'
      - 'test-harness/**'
      - 'post-office-stub/**'
      - 'infra-l2-outbound-proxy/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy to which environment?'
        required: true
        type: choice
        options:
          - DEV
          - BUILD

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-2

jobs:
  setup:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      environments: '["DEV", "BUILD"]'
    steps:
      - run: echo "Setting up environments"

  deploy:
    name: Validate & Deploy Test Container to ECR
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        environment: ${{ fromJson(needs.setup.outputs.environments) }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Assume temporary AWS role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets[format('{0}_CRI_F2F_GH_ACTIONS_ROLE_ARN', matrix.environment)] }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.9.0'

      - name: Build, tag, and push testing image to Amazon ECR
        env:
          CONTAINER_SIGN_KMS_KEY: ${{ secrets[format('{0}_CONTAINER_SIGN_KMS_KEY', matrix.environment)] }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TEST_ECR_REPOSITORY: ${{ secrets[format('{0}_TEST_ECR_REPOSITORY', matrix.environment)] }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$TEST_ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$TEST_ECR_REPOSITORY:$IMAGE_TAG
          cosign sign --key awskms:///${CONTAINER_SIGN_KMS_KEY} $ECR_REGISTRY/$TEST_ECR_REPOSITORY:$IMAGE_TAG

      # ... Push build artefacts to S3 ...
