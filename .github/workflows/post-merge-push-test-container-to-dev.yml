name: Deploy Test Container to Dev ECR
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
    paths-ignore:
      - 'infra-l2-dynamo/**'
      - 'infra-l2-kms/**'
      - 'f2f-ipv-stub/**'
      - 'infra-l2-outbound-proxy/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env: # Only adding the variables in that are required for 
  AWS_REGION: eu-west-2

jobs:
  deploy-test-container-to-dev-ecr:
    name: Validate & Deploy Test Container to Dev Envrionment ECR
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Assume temporary AWS role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.DEV_CRI_F2F_GH_ACTIONS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # ... Build and validate SAM application ...

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.9.0'

      - name: Build, tag, and push testing image to Amazon ECR
        env:
          DEV_CONTAINER_SIGN_KMS_KEY: ${{ secrets.DEV_CONTAINER_SIGN_KMS_KEY }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DEV_TEST_ECR_REPOSITORY: ${{ secrets.DEV_TEST_ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$DEV_TEST_ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$DEV_TEST_ECR_REPOSITORY:$IMAGE_TAG
          # cosign sign --key awskms:///${DEV_CONTAINER_SIGN_KMS_KEY} $ECR_REGISTRY/$DEV_TEST_ECR_REPOSITORY:$IMAGE_TAG

      # ... Push build artefacts to S3 ...