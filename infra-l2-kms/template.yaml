AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  infra-l2-kms

  A set of KMS resources that should be deployed up the environments.

Parameters:
  Environment:
    Description: "The environment type"
    Type: "String"
    Default: dev
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"

  CodeSigningConfigArn:
    Type: String
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: "none"

  PermissionsBoundary:
    Type: String
    Description: >
      The ARN of the permissions boundary to apply to any role created by the template
    Default: "none"

  KmsPendingWindowInDays:
    Type: Number
    Description: Number of days to retain KMS in pending deletion state when deleted
    Default: 30

  ServiceName:
    Type: String
    Description: >
      Optionally provide a service name to enable naming convention patterns
    Default: "none"
    AllowedPattern: "[a-z0-9-]+|none"
    ConstraintDescription: >
      Must be a DNS compliant name containing alphanumeric characters and hyphens only OR set as "none"

Conditions:
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"

  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

Globals:
  Function:
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue

Resources:
  KMSSigningKey:
    Type: AWS::KMS::Key
    #checkov:skip=CKV_AWS_7:Automatic key rotation can only be enabled on symmetric keys.
    Properties:
      Description: !Sub "${AWS::StackName} VC signing key"
      Enabled: true
      EnableKeyRotation: false
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - "kms:*"
            Resource:
              - "*"
      KeySpec: ECC_NIST_P256
      KeyUsage: SIGN_VERIFY
      MultiRegion: false
      PendingWindowInDays: !Ref KmsPendingWindowInDays
      Tags:
        - Key: KeyType
          Value: VC Signing Key
        - Key: Environment
          Value: !Sub ${Environment}
        - Key: CheckovRulesToSkip
          Value: CKV_AWS_7

  KMSSigningKeyAlias:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-vc-signing-key"
      TargetKeyId: !Ref KMSSigningKey

  KMSEncryptionKey:
    Type: AWS::KMS::Key
    #checkov:skip=CKV_AWS_7:Automatic key rotation can only be enabled on symmetric keys.
    Properties:
      Description: !Sub "${AWS::StackName} CRI encryption key"
      Enabled: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: "Allow the account to manage the key"
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: "kms:*"
            Resource: "*"
      KeySpec: RSA_2048
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !Ref KmsPendingWindowInDays
      Tags:
        - Key: KeyType
          Value: Encryption Key
        - Key: Environment
          Value: !Sub ${Environment}
        - Key: CheckovRulesToSkip
          Value: CKV_AWS_7

  KMSEncryptionKeyAlias:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-encryption-key"
      TargetKeyId: !Ref KMSEncryptionKey

  PublishedKeysS3Bucket:
    Type: AWS::S3::Bucket
    # checkov:skip=CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
    Properties:
      BucketName: !Sub "${ServiceName}-${Environment}-key-rotation-bucket"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      Tags:
        - Key: "Description"
          Value: "Published OAuth or DID keys bucket for key rotation state machine"

Outputs:
  SigningKeyArn:
    Description: "The Arn of the VC signing key"
    Value: !GetAtt KMSSigningKey.Arn
    Export:
      Name: !Sub "${AWS::StackName}-vc-signing-key"
  SigningKeyId:
    Description: "The Id of the VC signing key"
    Value: !Ref KMSSigningKey
    Export:
      Name: !Sub "${AWS::StackName}-vc-signing-key-id"
  SigningKeyAlias:
    Description: "The Alias of the VC signing key"
    Value: !Ref KMSSigningKeyAlias
  EncryptionKeyArn:
    Description: "The ARN of the encryption key"
    Value: !GetAtt KMSEncryptionKey.Arn
    Export:
      Name: !Sub "${AWS::StackName}-encryption-key"
  EncryptionKeyId:
    Description: "The Id of the encryption key"
    Value: !Ref KMSEncryptionKey
    Export:
      Name: !Sub "${AWS::StackName}-encryption-key-id"
  EncryptionKeyAlias:
    Description: "The ARN of the encryption key"
    Value: !Ref KMSEncryptionKeyAlias
  PublishedKeysS3BucketName:
    Description: "The name of the bucket used by the key rotation state machine"
    Value: !Ref PublishedKeysS3Bucket
    Export:
      Name: !Sub PublishedKeysS3BucketName
  PublishedKeysS3BucketArn:
    Description: "The ARN of the bucket used by the key rotation state machine"
    Value: !GetAtt PublishedKeysS3Bucket.Arn
    Export:
      Name: !Sub PublishedKeysS3BucketArn
