AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Digital Identity F2F PostOFfice Stub"

Parameters:
  KmsPendingWindowInDays:
    Type: Number
    Description: Number of days to retain KMS in pending deletion state when deleted
    Default: 30
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"

    ConstraintDescription: Ensure environment variable is set to one of dev, build.
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  VpcStackName:
    Type: String
    Default: "vpc-cri"
    Description: The name of the VPC stack deployed.

Mappings:
  EnvironmentConfiguration: # This is where you store per-environment settings.
    dev:
      logretentionindays: 3
      apiTracingEnabled: true
    build:
      logretentionindays: 3
      apiTracingEnabled: true

  EnvironmentVariables: # This is all the environment specific environment variables that don't belong in globals.
    dev:
      POSTOFFICESTUBURL: "postofficestub.review-o.dev.account.gov.uk"
    build:
      POSTOFFICESTUBURL: "postofficestub.review-o.build.account.gov.uk"

Conditions:
  CreateDevResources: !Equals
    - !Ref Environment
    - dev
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

Globals:
  Api:
    BinaryMediaTypes:
      - '*/*'
  Function:
    Runtime: nodejs18.x
    VpcConfig:
      SecurityGroupIds:
        - !GetAtt LambdaEgressSecurityGroup.GroupId
      SubnetIds:
        - Fn::ImportValue:
            "Fn::Sub": "${VpcStackName}-ProtectedSubnetIdA"
        - Fn::ImportValue:
            "Fn::Sub": "${VpcStackName}-ProtectedSubnetIdB"
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Timeout: 30 # seconds
    Tracing: Active
    MemorySize: 1024
    Architectures:
      - arm64
    Environment:
      Variables:
        # These should always be alphabetically organised.
        AWS_STACK_NAME: !Sub ${AWS::StackName} # The AWS Stack Name, as passed into the template.
        POWERTOOLS_LOG_LEVEL: INFO # The LogLevel for the AWS PowerTools LogHelper
        POWERTOOLS_METRICS_NAMESPACE: F2F-CRI # The Metric Namespace for the AWS PowerTools MetricHelper
    AutoPublishAlias: live

Resources:
  LambdaEgressSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: >-
        Permits outbound on port 443 from within the VPC to the internet.
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow to the wider internet on port 443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"

  ### Start of API Gateway definition.

  MockPostOfficeRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      OpenApiVersion: 3.0.2
      AccessLogSetting:
        Format: "$context.requestId $context.httpMethod $context.path"
        DestinationArn: !GetAtt MockPostOfficeAPIGatewayAccessLogGroup.Arn
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        ## workaround as https://github.com/aws/serverless-application-model/blob/14d0563e5f48adbb0d1ff1c807ca3eeb17adc3d8/samtranslator/swagger/swagger.py#L65
        ## won't allow BinaryMediaTypes with external openapi sppec file
        openapi: '3.0.2'
        paths:
          /myMethod:
            post:
              produces:
                - "application/json"
              responses: { }

        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './post-office-spec.yaml'

      TracingEnabled: true
      Tags:
        Product: GOV.UK Sign In
        System: PostOfficeMock
        Environment: !Ref Environment
        Service: backend
        Name: MockPostOfficeRestApi
        Source: postoffice

  MockPostOfficeRestApiUsagePlan:
    DependsOn:
      - MockPostOfficeRestApiStage
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      ApiStages:
        - ApiId: !Ref MockPostOfficeRestApi
          Stage: !Ref Environment
      Quota:
        Limit: 250000
        Period: DAY
      Throttle:
        BurstLimit: 3000 # requests the API can handle concurrently
        RateLimit: 50 # allowed requests per second

  MockPostOfficeAPIGatewayAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: PostOffice
        - Key: Environment
          Value: Demo
        - Key: Service
          Value: backend
        - Key: Name
          Value: APIGatewayAccessLogGroup


  ### End of API Gateway definition.

  ### Function Definition
  MockPostOfficeFunction:
    Type: AWS::Serverless::Function
    DependsOn: MockPostOfficeFunctionLogGroup
    Properties:
      FunctionName: !Sub "Post-Office-Stub-${AWS::StackName}"
      Handler: MockPostOfficeHandler.lambdaHandler
      CodeUri: ./src/
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: MockPostOfficeHandler

      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess

      Events:
        postLocationSearch:
          Type: Api
          Properties:
            Path: /postoffice/locations/search
            Method: post
            RestApiId: !Ref MockPostOfficeRestApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - MockPostOfficeHandler.ts

  MockPostOfficeFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/Post-Office-${AWS::StackName}"
      RetentionInDays: !FindInMap [ EnvironmentConfiguration, !Ref Environment, logretentionindays ]

  MockPostOfficeFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref MockPostOfficeFunction
      Principal: apigateway.amazonaws.com

  MockPostOfficeApiGatewayCustomDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: !If
        - CreateDevResources
        - !Sub
          - "${AWS::StackName}-${POSTOFFICESTUBURL}"
          - POSTOFFICESTUBURL:
              !FindInMap [ EnvironmentVariables, !Ref Environment, POSTOFFICESTUBURL ]
        - !FindInMap [ EnvironmentVariables, !Ref Environment, POSTOFFICESTUBURL ]
      DomainNameConfigurations:
        - CertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/PrimaryZoneWildcardCertificateARN}}"
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2

  MockPostOfficeApiDomainRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref MockPostOfficeApiGatewayCustomDomain
      Type: A
      HostedZoneId: !Sub "{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}"
      AliasTarget:
        DNSName: !GetAtt MockPostOfficeApiGatewayCustomDomain.RegionalDomainName
        HostedZoneId: !GetAtt MockPostOfficeApiGatewayCustomDomain.RegionalHostedZoneId
        EvaluateTargetHealth: false

  # Base Path Mapping
  MockPostOfficeApiBasePathMapping:
    Type: 'AWS::ApiGateway::BasePathMapping'
    Properties:
      DomainName: !Ref MockPostOfficeApiGatewayCustomDomain
      RestApiId: !Ref MockPostOfficeRestApi

      # workaround for sam bug - see https://github.com/aws/serverless-application-model/issues/192#issuecomment-520893111
      # noinspection YamlUnresolvedReferences
      Stage: !Ref MockPostOfficeRestApi.Stage

Outputs:
  MockPostOfficeApiGatewayId:
    Description: "API GatewayID of the PostOffice API"
    Value: !Sub "${MockPostOfficeRestApi}"
    Export:
      Name: !Sub ${AWS::StackName}-MockPostOfficeApiGatewayId
